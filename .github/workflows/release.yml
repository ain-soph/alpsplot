name: release

on:
  release:
    types: [created]

env:
  DOCKERHUB_REPOSITORY: alpsplot
jobs:
  pypi:
    runs-on: ubuntu-latest
    container:
      image: python
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Install dependencies
        run: |
          pip install --no-cache-dir --upgrade pip
          pip install --no-cache-dir build
          pip install -r requirements.txt
      - name: Build
        run: python -m build .
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
  docker:
    name: docker
    needs: pypi
    runs-on: ubuntu-latest
    steps:
      - name: version
        id: get-version
        uses: actions/github-script@v5
        with:
          script: return context.payload.release.tag_name.substring(1)
          result-encoding: string
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2.7.0
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.get-version.outputs.result }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.get-version.outputs.result }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha
